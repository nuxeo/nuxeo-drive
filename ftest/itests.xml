<project name="drive-tests" default="run-drive-tests" xmlns:nx="urn:nuxeo-build" xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml" uri="urn:nuxeo-artifact" />
  <taskdef resource="net/sf/antcontrib/antlib.xml" />

  <property name="out.dir" value="${maven.project.build.directory}-${platform}" />
  <property environment="env"/>

  <target name="add-custom-template" unless="env.ENABLE_CONVERTERS">
    <echo level="info">Disabling all converters ...</echo>
    <echo level="info">To enable server converters, you have to set the ENABLE_CONVERTERS envar.</echo>
    <antcall target="set-conf">
      <param name="name" value="nuxeo.templates" />
      <param name="value" value="postgresql,custom" />
    </antcall>
  </target>

  <target name="enable-custom-template" unless="env.ENABLE_CONVERTERS">
    <echo level="info">Activating the custom template to turn OFF all converters ...</echo>
    <copy todir="${out.dir}/tomcat/templates/custom" verbose="true" overwrite="true">
      <fileset dir="custom"/>
    </copy>
  </target>

  <target name="prepare-tomcat-logs" depends="_init" if="is.tomcat" unless="env.ENABLE_CONVERTERS">
    <echo level="info">Adding DEBUG logs to trace command line calls (to catch used converters) ...</echo>
    <echo level="info">Just grep "Running system command:" ;)</echo>
    <replace file="${nuxeo.home}/lib/log4j2.xml">
      <replacetoken><![CDATA[    <Logger name="org.nuxeo" level="warn" />
]]></replacetoken>
      <replacevalue><![CDATA[    <Logger name="org.nuxeo.ecm.platform.commandline.executor.service.executors" level="debug" />

    <Logger name="org.nuxeo" level="warn" />
]]></replacevalue>
    </replace>
  </target>

  <unzip dest="${out.dir}/" overwrite="false">
    <artifact:resolveFile key="org.nuxeo:nuxeo-ftest::zip" />
  </unzip>
  <import file="${out.dir}/nuxeo-ftest.xml" />

  <!-- Needed to test the Picture type -->
  <property name="wizard.preset" value="nuxeo-dam" />

  <!-- Configure nuxeo-drive marketplace package installation -->
  <property name="nuxeo.drive.mp.filename" value="nuxeo-drive.zip" />
  <!-- nuxeo-platform-importer is needed to test mass import -->
  <property name="mp.install" value="file:${out.dir}/${nuxeo.drive.mp.filename},nuxeo-platform-importer" />

  <target name="fetch-nuxeo-drive-mp">
    <exec executable="python" failonerror="true">
      <arg value="../tools/integration_tests_setup.py" />
      <arg value="--base-folder=.." />
      <arg value="--work-folder=${out.dir}" />
      <arg value="fetch-mp" />
      <arg value="--url=${nuxeo.drive.mp.url}" />
      <arg value="--marketplace-filename=${nuxeo.drive.mp.filename}" />
    </exec>
  </target>

  <target name="run-drive-tests">
    <echo level="info">################### Starting Nuxeo Drive functional tests ###################</echo>
    <property environment="env" />
    <property name="env.SERVER_URL" value="" />
    <property name="env.ENGINE" value="" />
    <echo level="info">PATH detected by Ant = ${env.PATH}</echo>
    <echo level="info">SERVER_URL environment variable = ${env.SERVER_URL}</echo>
    <echo level="info">ENGINE environment variable = ${env.ENGINE}</echo>
    <exec executable="python" failonerror="true">
      <arg value="../tools/integration_tests_setup.py" />
      <arg value="--base-folder=.." />
      <arg value="--work-folder=${out.dir}" />
      <arg value="test" />
      <arg value="--server-url=${env.SERVER_URL}" />
      <arg value="--engine=${env.ENGINE}" />
    </exec>
    <echo level="info">################### Ended Nuxeo Drive functional tests ###################</echo>
  </target>

</project>
