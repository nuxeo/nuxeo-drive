[tox]
skipsdist = True
envlist =
    style
    lint
    types
    cleanup
    spell
    unit
    # Not run by default
    # translations
    # integration
    # ft
    # bench

[base]
deps = -r tools/deps/requirements-pip.txt
passenv =
    FREEZE_ONLY
    HOME
    JENKINS_URL
    NXDRIVE_TEST_NUXEO_URL
    NXDRIVE_TEST_PASSWORD
    NXDRIVE_TEST_USERNAME
    REPORT_PATH
    SECOND_PARTITION
    SENTRY_DSN
    SKIP_SENTRY
    WS_DIR

[testenv:style]
description = Code style check
deps =
    {[base]deps}
    -r tools/deps/requirements-style.txt
commands =
    python -m black --check --diff nxdrive
    python -m black --check --diff tests
    python -m black --check --diff tools

[testenv:lint]
description = Code quality check
deps =
    {[base]deps}
    -r tools/deps/requirements-lint.txt
commands =
    python -m flake8 nxdrive
    python -m flake8 tests
    python -m flake8 tools

[testenv:types]
description = Type annotations check
deps =
    {[base]deps}
    -r tools/deps/requirements-types.txt
commands = python -m mypy --platform win32 nxdrive

[testenv:cleanup]
description = Dead code check
deps =
    {[base]deps}
    -r tools/deps/requirements-cleanup.txt
commands = python -m vulture nxdrive tools/whitelist.py

[testenv:spell]
description = Grammar check
whitelist_externals = sh
deps =
    {[base]deps}
    -r tools/deps/requirements-spell.txt
commands = sh ./tools/check-spell.sh

[testenv:translations]
description = Translation files check
commands = python tools/check_translations.py nxdrive/data/i18n

[testenv:unit]
description = Unit tests
passenv = {[base]passenv}
deps =
    {[base]deps}
    -r tools/deps/requirements.txt
    -r tools/deps/requirements-tests.txt
commands = python -m pytest {posargs} tests/unit

[testenv:ft]
description = Fuctional tests
passenv = {[base]passenv}
deps =
    {[base]deps}
    -r tools/deps/requirements.txt
    -r tools/deps/requirements-tests.txt
commands =
    python -m pytest {posargs} tests/functional tests/old_functional

[testenv:integration]
description = Integration tests
passenv = {[base]passenv}
deps =
    {[base]deps}
    -r tools/deps/requirements.txt
    -r tools/deps/requirements-tests.txt
    -r tools/deps/requirements-integration.txt
commands = python -m pytest -n0 {posargs} tests/integration

[testenv:bench]
description = Unit benchmarks
deps =
    {[base]deps}
    -r tools/deps/requirements.txt
    -r tools/deps/requirements-tests.txt
    -r tools/deps/requirements-bench.txt
commands = python -m pytest -c tests/benchmarks/empty.ini \
    --benchmark-group-by=param \
    --benchmark-sort=stddev \
    --benchmark-columns=min,max,mean,stddev \
    tests/benchmarks
