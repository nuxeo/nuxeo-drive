name: Integration tests

on:
  pull_request:
    paths:
      - ".github/workflows/integration_tests.yml"
      - "nxdrive/**/*.py"
      - "tests/integration/**/*.py"
      - "tools/deps/*.txt"
  push:
    branches: [master]
    paths:
      - "nxdrive/**/*.py"
      - "tests/integration/**/*.py"

env:
  FREEZE_ONLY: 1
  NXDRIVE_TEST_NUXEO_URL: https://nuxeo-drive-preview.platform.dev.nuxeo.com/nuxeo
  NXDRIVE_TEST_PASSWORD: ${{ secrets.NXDRIVE_TEST_PASSWORD }}

jobs:
  integration-tests-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.9 # XXX_PYTHON
          architecture: "x86"
      - uses: actions/cache@v2.1.6
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements.txt', 'tools/deps/requirements-test.txt', 'tools/deps/requirements-dev.txt', 'tools/deps/requirements-tox.txt') }}
          restore-keys: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements.txt', 'tools/deps/requirements-test.txt', 'tools/deps/requirements-dev.txt', 'tools/deps/requirements-tox.txt') }}
      # Cannot be used for now: OSError: [WinError 193] %1 is not a valid Win32 application
      # - uses: actions/cache@v2.1.6
      #   with:
      #     path: .tox
      #     key: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
      #     restore-keys: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
      - name: Freeze the application
        run: |
          powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine
          powershell ".\\tools\\windows\\deploy_ci_agent.ps1" -install_release
          powershell ".\\tools\\windows\\deploy_ci_agent.ps1" -build
      - name: Install tox
        run: python -m pip install -r tools/deps/requirements-tox.txt
      - name: Integration tests
        run: tox -e integration
      - name: Upload coverage to Codecov
        if: ${{ success() }} || ${{ failure() }}
        uses: codecov/codecov-action@v1.5.2
        with:
          files: ./coverage.xml
          flags: integration
          env_vars: OS,PYTHON
