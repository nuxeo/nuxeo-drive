name: Unit tests

on:
  pull_request:
    paths:
    - 'nxdrive/**/*.py'
    - 'tests/*.py'
    - 'tests/unit/*.py'
    - 'tools/deps/*.txt'

jobs:
  ut_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9  # XXX_PYTHON
    - uses: actions/cache@v2.1.4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
        restore-keys: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
    - uses: actions/cache@v2.1.4
      with:
        path: .tox
        key: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
        restore-keys: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
    - name: Install tox
      run: python -m pip install -r tools/deps/requirements-tox.txt
    - name: Unit tests
      run: tox -e unit -- --cov-report xml:artifacts_ut/ut_coverage_linux.xml
    - name: Upload
      if: ${{ success() }} || ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts_ut
        path: artifacts_ut

  ut_macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9  # XXX_PYTHON
    - uses: actions/cache@v2.1.4
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
        restore-keys: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
    - uses: actions/cache@v2.1.4
      with:
        path: .tox
        key: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
        restore-keys: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
    - name: Install tox
      run: python -m pip install -r tools/deps/requirements-tox.txt
    - name: Unit tests
      run: tox -e unit -- --cov-report xml:artifacts_ut/ut_coverage_macos.xml
    - name: Upload
      if: ${{ success() }} || ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts_ut
        path: artifacts_ut

  ut_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9  # XXX_PYTHON
        architecture: 'x86'
    - uses: actions/cache@v2.1.4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
        restore-keys: ${{ runner.os }}-pip-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
    # Cannot be used for now: OSError: [WinError 193] %1 is not a valid Win32 application
    # - uses: actions/cache@v2.1.4
    #   with:
    #     path: .tox
    #     key: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
    #     restore-keys: ${{ runner.os }}-tox-${{ hashFiles('tools/deps/requirements-test.txt', 'tools/deps/requirements-tox.txt') }}
    - name: Install tox
      run: python -m pip install -r tools/deps/requirements-tox.txt
    - name: Unit tests
      run: tox -e unit -- --cov-report xml:artifacts_ut/ut_coverage_windows.xml
    - name: Upload
      if: ${{ success() }} || ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts_ut
        path: artifacts_ut

  upload_codecov:
    needs: [ut_linux, ut_macos, ut_windows]
    if: ${{ success() }} || ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
    - name: Download coverage reports
      uses: actions/download-artifact@v2
      with:
        name: artifacts_ut
        path: artifacts_ut
    - name: Upload unit coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        files: ./artifacts_ut/ut_coverage_linux.xml,./artifacts_ut/ut_coverage_macos.xml,./artifacts_ut/ut_coverage_windows.xml
        flags: unit
        env_vars: OS,PYTHON
